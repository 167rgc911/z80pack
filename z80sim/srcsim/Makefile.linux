# Makefile pre-configured for Linux

###
### START MACHINE DEPENDENT VARIABLES
###
# (simple) machine name - will be suffixed with 'sim' and the executable saved as '../machinesim'
MACHINE = z80
# machine specific system object files
MACHINE_OBJS = config.o iosim.o memory.o simctl.o
# machine specific I/O object files
IO_OBJS =
# machine specifc libraries
MACHINE_LIBS =

# Installation directories by convention
# http://www.gnu.org/prep/standards/html_node/Directory-Variables.html
CPROG = $(MACHINE)sim
PREFIX ?= /usr/local
EXEC_PREFIX = $(PREFIX)
BINDIR = $(EXEC_PREFIX)/bin
DATAROOTDIR = $(PREFIX)/share
DOCDIR = $(DATAROOTDIR)/doc/$(CPROG)
SYSCONFDIR = $(PREFIX)/etc
HTMLDIR = $(DOCDIR)
INCLUDEDIR = $(DESTDIR)$(PREFIX)/include
LIBDIR = $(DESTDIR)$(EXEC_PREFIX)/lib
###
### END MACHINE DEPENDENT VARIABLES
###

SIM = ../$(MACHINE)sim

CORE_DIR = ../../z80core

###
### START O/S PLATFORM DEPENDENT VARIABLES
###
CC = gcc
EXEC = $(SIM)
###
### END O/S DEPENDENT VARIABLES
###

DEFS =
INCS = -I. -I$(CORE_DIR) $(PLAT_INCS)

CWARNS = -Wall -Wextra -Wwrite-strings

# Production
CFLAGS = -O3 $(CWARNS) $(PLAT_CFLAGS) -U_FORTIFY_SOURCE $(DEFS) $(INCS)

# Development
#CFLAGS = -O3 $(CWARNS) $(PLAT_CFLAGS) -fstack-protector-all -D_FORTIFY_SOURCE=2 $(DEFS) $(INCS)

# Debug
#CFLAGS = -O -g $(PLAT_CFLAGS) $(DEFS) $(INCS)

LDFLAGS = $(PLAT_LDFLAGS) $(MACHINE_LIBS) \
	  $(PLAT_LIBS)

# core system source files for the CPU simulation - only change if the core changes
CORE_OBJS = sim0.o sim1.o sim1a.o sim2.o sim3.o sim4.o sim5.o sim6.o sim7.o simdis.o simfun.o simglb.o simice.o simint.o
OBJS = $(CORE_OBJS) $(MACHINE_OBJS) $(IO_OBJS)

all: $(SIM)
	@echo
	@echo "Done."
	@echo

$(SIM): $(OBJS)
	$(CC) $(OBJS) $(LDFLAGS) -o $@

build: _rm_obj all

install:
	@echo
	@echo Waiting to be written...
	@echo

clean: _rm_obj

_rm_obj:
	rm -f *.o

allclean: clean
	rm -f $(EXEC)

# AUTOMATICALLY GENERATED DO NOT EDIT

config.o: config.c
	$(CC) $(CFLAGS) -c -o $@ config.c

iosim.o: iosim.c sim.h $(CORE_DIR)/simglb.h
	$(CC) $(CFLAGS) -c -o $@ iosim.c

memory.o: memory.c sim.h $(CORE_DIR)/simglb.h memory.h
	$(CC) $(CFLAGS) -c -o $@ memory.c

sim0.o: $(CORE_DIR)/sim0.c sim.h $(CORE_DIR)/simglb.h config.h \
 memory.h
	$(CC) $(CFLAGS) -c -o $@ $(CORE_DIR)/sim0.c

sim1.o: $(CORE_DIR)/sim1.c sim.h $(CORE_DIR)/simglb.h config.h \
 memory.h
	$(CC) $(CFLAGS) -c -o $@ $(CORE_DIR)/sim1.c

sim1a.o: $(CORE_DIR)/sim1a.c sim.h $(CORE_DIR)/simglb.h config.h \
 memory.h
	$(CC) $(CFLAGS) -c -o $@ $(CORE_DIR)/sim1a.c

sim2.o: $(CORE_DIR)/sim2.c sim.h $(CORE_DIR)/simglb.h config.h \
 memory.h
	$(CC) $(CFLAGS) -c -o $@ $(CORE_DIR)/sim2.c

sim3.o: $(CORE_DIR)/sim3.c sim.h $(CORE_DIR)/simglb.h config.h \
 memory.h
	$(CC) $(CFLAGS) -c -o $@ $(CORE_DIR)/sim3.c

sim4.o: $(CORE_DIR)/sim4.c sim.h $(CORE_DIR)/simglb.h config.h \
 memory.h
	$(CC) $(CFLAGS) -c -o $@ $(CORE_DIR)/sim4.c

sim5.o: $(CORE_DIR)/sim5.c sim.h $(CORE_DIR)/simglb.h config.h \
 memory.h
	$(CC) $(CFLAGS) -c -o $@ $(CORE_DIR)/sim5.c

sim6.o: $(CORE_DIR)/sim6.c sim.h $(CORE_DIR)/simglb.h config.h \
 memory.h
	$(CC) $(CFLAGS) -c -o $@ $(CORE_DIR)/sim6.c

sim7.o: $(CORE_DIR)/sim7.c sim.h $(CORE_DIR)/simglb.h config.h \
 memory.h
	$(CC) $(CFLAGS) -c -o $@ $(CORE_DIR)/sim7.c

simctl.o: simctl.c sim.h $(CORE_DIR)/simglb.h
	$(CC) $(CFLAGS) -c -o $@ simctl.c

simdis.o: $(CORE_DIR)/simdis.c sim.h $(CORE_DIR)/simglb.h memory.h
	$(CC) $(CFLAGS) -c -o $@ $(CORE_DIR)/simdis.c

simfun.o: $(CORE_DIR)/simfun.c sim.h $(CORE_DIR)/simglb.h memory.h \
 $(CORE_DIR)/log.h
	$(CC) $(CFLAGS) -c -o $@ $(CORE_DIR)/simfun.c

simglb.o: $(CORE_DIR)/simglb.c sim.h $(CORE_DIR)/simglb.h
	$(CC) $(CFLAGS) -c -o $@ $(CORE_DIR)/simglb.c

simice.o: $(CORE_DIR)/simice.c sim.h $(CORE_DIR)/simglb.h memory.h
	$(CC) $(CFLAGS) -c -o $@ $(CORE_DIR)/simice.c

simint.o: $(CORE_DIR)/simint.c sim.h $(CORE_DIR)/simglb.h
	$(CC) $(CFLAGS) -c -o $@ $(CORE_DIR)/simint.c

# DO NOT PUT ANYTHING AFTER THIS LINE
